// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SnackMachine.Domain;

namespace SnackMachine.Domain.Migrations
{
    [DbContext(typeof(SnackMachineContext))]
    partial class SnackMachineContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SnackMachine.Domain.HeadOffice", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("SalesAmount");

                    b.HasKey("Id");

                    b.ToTable("HeadOffices");
                });

            modelBuilder.Entity("SnackMachine.Domain.Slot", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Position");

                    b.Property<long?>("SnackMachineId");

                    b.HasKey("Id");

                    b.HasIndex("SnackMachineId");

                    b.ToTable("Slots");
                });

            modelBuilder.Entity("SnackMachine.Domain.Snack", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Snacks");
                });

            modelBuilder.Entity("SnackMachine.Domain.SnackMachine", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.HasKey("Id");

                    b.ToTable("SnackMachines");
                });

            modelBuilder.Entity("SnackMachine.Domain.Slot", b =>
                {
                    b.HasOne("SnackMachine.Domain.SnackMachine", "SnackMachine")
                        .WithMany("Slots")
                        .HasForeignKey("SnackMachineId");

                    b.OwnsOne("SnackMachine.Domain.SnackPile", "SnackPile", b1 =>
                        {
                            b1.Property<long>("SlotId")
                                .ValueGeneratedOnAdd()
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<decimal>("Price");

                            b1.Property<int>("Quantity");

                            b1.Property<long?>("SnackId");

                            b1.HasKey("SlotId");

                            b1.HasIndex("SnackId");

                            b1.ToTable("Slots");

                            b1.HasOne("SnackMachine.Domain.Slot")
                                .WithOne("SnackPile")
                                .HasForeignKey("SnackMachine.Domain.SnackPile", "SlotId")
                                .OnDelete(DeleteBehavior.Cascade);

                            b1.HasOne("SnackMachine.Domain.Snack", "Snack")
                                .WithMany()
                                .HasForeignKey("SnackId");
                        });
                });

            modelBuilder.Entity("SnackMachine.Domain.SnackMachine", b =>
                {
                    b.OwnsOne("SnackMachine.Domain.Money", "MoneyInside", b1 =>
                        {
                            b1.Property<long>("SnackMachineId")
                                .ValueGeneratedOnAdd()
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<int>("FiveDollarCount");

                            b1.Property<int>("OneCentCount");

                            b1.Property<int>("OneDollarCount");

                            b1.Property<int>("QuarterCount");

                            b1.Property<int>("TenCentCount");

                            b1.Property<int>("TwentyDollarCount");

                            b1.HasKey("SnackMachineId");

                            b1.ToTable("SnackMachines");

                            b1.HasOne("SnackMachine.Domain.SnackMachine")
                                .WithOne("MoneyInside")
                                .HasForeignKey("SnackMachine.Domain.Money", "SnackMachineId")
                                .OnDelete(DeleteBehavior.Cascade);
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
